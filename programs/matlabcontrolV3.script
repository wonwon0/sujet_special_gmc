def matlabcontrolV3():
  set_analog_inputrange(0, 0)
  set_analog_inputrange(1, 0)
  set_analog_inputrange(2, 0)
  set_analog_inputrange(3, 0)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_tool_voltage(0)
  set_runstate_outputs([])
  set_payload(0.0)
  set_gravity([0.0, 0.0, 9.82])
  flag_N=1
  varmsg("flag_N",flag_N)
  i_var_1=1
  varmsg("i_var_1",i_var_1)
  MTool_pos=p[0, 0, 0, 0, 0, 0]
  varmsg("MTool_pos",MTool_pos)
  $ 44 "SubProgram_1"
  def SubProgram_1():
    receive_data=socket_read_ascii_float(6)
    if (receive_data[0] !=6):
      socket_send_string("0")
    else:
      socket_send_string("1")
      global pointer = 0
      varmsg("pointer",pointer)
      while (pointer <receive_data[0]):
        Move_To_Pos[pointer]=receive_data[pointer+1]
        global pointer = pointer+1
        varmsg("pointer",pointer)
      end
      global task = [0,0]
      varmsg("task",task)
    end
  end
  $ 55 "SubProgram_2"
  def SubProgram_2():
    pose_1=get_forward_kin()
    socket_send_string(pose_1)
  end
  $ 58 "SubProgram_3"
  def SubProgram_3():
    pose_1=get_forward_kin()
    global pointer = 0
    varmsg("pointer",pointer)
    while (pointer <receive_data[0]):
      Move_To_Pos[pointer]=pose_1[pointer]
      global pointer = pointer+1
      varmsg("pointer",pointer)
    end
  end
  $ 64 "SubProgram_4"
  def SubProgram_4():
    pose_j=get_actual_joint_positions()
    socket_send_string(pose_j)
  end
  $ 67 "SubProgram_5"
  def SubProgram_5():
    speed_j=get_actual_joint_speeds()
    socket_send_string(speed_j)
  end
  $ 1 "BeforeStart"
  $ 2 "receive_data≔[6,0,0,0,0,0,0]"
  global receive_data = [6,0,0,0,0,0,0]
  varmsg("receive_data",receive_data)
  $ 3 "Move_To_Pos≔[0,0,0,0,0,0]"
  global Move_To_Pos = [0,0,0,0,0,0]
  varmsg("Move_To_Pos",Move_To_Pos)
  $ 5 "socket_open('132.203.102.51',30000)"
  socket_open("132.203.102.51",30000)
  $ 6 "task≔[0,0]"
  global task = [0,0]
  varmsg("task",task)
  $ 7 "coop≔0"
  global coop = 0
  varmsg("coop",coop)
  $ 8 "set_pos([0,-1.57,1.57,0,1.57,0])"
  set_pos([0,-1.57,1.57,0,1.57,0])
  $ 33 "Thread_1"
  thread Thread_1():
    while True:
      if (coop ==1):
        while (coop ==1):
          thread Force_properties_calculation_thread_36():
            while (True):
              force_mode(p[0.0,0.0,0.0,0.0,0.0,0.0], [1, 1, 1, 1, 1, 1], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 2, [0.15, 0.15, 0.15, 1.0471975511965976, 1.0471975511965976, 1.0471975511965976])
              sync()
            end
          end
          global thread_handler_36 = run Force_properties_calculation_thread_36()
          sleep(0.01)
          kill thread_handler_36
          end_force_mode()
        end
        global coop = 0
        varmsg("coop",coop)
        SubProgram_3()
      else:
        speedj(Move_To_Pos, a=4,t_min=0.001)
      end
    end
  end
  threadId_Thread_1 = run Thread_1()
  while (True):
    $ 9 "Robot Program"
    $ 14 "task=socket_read_ascii_float(1)"
    task=socket_read_ascii_float(1)
    $ 15 "If task[1]≟2"
    if (task[1] ==2):
      $ 16 "Call SubProgram_2"
      SubProgram_2()
      $ 17 "task≔[0,0]"
      global task = [0,0]
      varmsg("task",task)
    else:
      $ 18 "ElseIf task[1]≟3"
      if (task[1] ==3):
        $ 19 "coop≔1"
        global coop = 1
        varmsg("coop",coop)
        $ 20 "socket_send_string('1')"
        socket_send_string("1")
        $ 21 "task≔[0,0]"
        global task = [0,0]
        varmsg("task",task)
      else:
        $ 22 "ElseIf task[1]≟4"
        if (task[1] ==4):
          $ 23 "coop≔0"
          global coop = 0
          varmsg("coop",coop)
          $ 24 "socket_send_string('1')"
          socket_send_string("1")
          $ 25 "task≔[0,0]"
          global task = [0,0]
          varmsg("task",task)
        else:
          $ 26 "ElseIf task[1]≟1"
          if (task[1] ==1):
            $ 27 "Call SubProgram_1"
            SubProgram_1()
          else:
            $ 28 "ElseIf task[1]≟5"
            if (task[1] ==5):
              $ 29 "Call SubProgram_4"
              SubProgram_4()
            else:
              $ 30 "ElseIf task[1]≟6"
              if (task[1] ==6):
                $ 31 "Call SubProgram_5"
                SubProgram_5()
              end
            end
          end
        end
      end
    end
    $ 32 "Wait: 0.01"
    sleep(0.01)
  end
end
